package ro.redeul.katas.runningAverage;public class Rational {    private final int p;    private final int q;    public static final Rational ZERO = new Rational(0);    public Rational(int p, int q) {        this.p = p;        this.q = q;    }    public Rational(int n) {        this(n, 1);    }    public Rational simplify() {        if (q == 0)            return this;        int gcd = gcd(p, q);        return gcd != 0                ? new Rational(p / gcd, q / gcd)                : this;    }    private static int gcd(int a, int b) {        return b == 0 ? a : gcd(b, a % b);    }    public Rational mul(int i) {        return new Rational(p * i, q);    }    public Rational multiply(Rational r) {        return new Rational(p * r.p, q * r.q);    }    public Rational add(int n) {        return new Rational(p + q * n, q);    }    public Rational add(Rational r) {        return new Rational(p * r.q + q * r.p, p * q);    }    public Rational div(int n) {        if ( n == 0 )            throw new ArithmeticException("Division by zero");        return new Rational(p, q * n);    }    public Rational divide(Rational r) {        if ( r.p == 0 )            throw new ArithmeticException("Division by zero");        return new Rational(p * r.q, q * r.p);    }    public double asDouble() {        return p / q;    }}